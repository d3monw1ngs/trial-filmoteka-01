{"mappings":"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","sources":["src/js/script.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=b5e824a3d922f68ba211fcf6dbdcb6f5';\nconst API_URL = BASE_URL + '/discover/movie?sort_by-popularity.desc&' + API_KEY;\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst searchURL = BASE_URL + '/search/movie?'+API_KEY;\n\nconst options = {\n  params: {\n      key: API_KEY,\n      query: \"\",\n      include_adult: false,\n      language: \"en-US\",\n      primary_release_year: \"\",\n      page: 1,\n      region: \"\",\n      year: \"\", \n  }\n}\n\n// MODAL PART\nconst modal = document.getElementById('myModal');\nconst modalPoster = document.getElementById('modal-poster');\nconst modalTitle = document.getElementById('modal-title');\nconst modalVote = document.getElementById('modal-vote');\nconst modalPopularity = document.getElementById('modal-popularity');\nconst modalOrigTitle = document.getElementById('modal-original-title');\nconst modalGenre = document.getElementById('modal-genre');\nconst modalOverview = document.getElementById('modal-overview');\nconst addToWatchedBtn = document.getElementById('addToWatchedBtn');\nconst addToQueuBtn = document.getElementById('addToQueuBtn');\nconst closeBtn = document.getElementsByClassName('close')[0];\n\nlet genres;\n\nfetch(BASE_URL + '/genre/movie/list?' + API_KEY)\n  .then(response => response.json())\n  .then(data => {\n    genres = data.genres;\n    getMovies(API_URL, genres);\n  })\n  .catch(error => {\n    console.error('Error fetching genres:', error);\n  });\n\n// function to open the modal with movie details\nfunction openModal(movie) {\n    console.log('Movie data:', movie);\n    modalPoster.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    modalTitle.textContent = movie.title;\n    modalVote.innerHTML = `Vote / Votes: <span class=\"vot\">${movie.vote_average}</span> / ${movie.vote_count}`;\n    modalPopularity.innerHTML = `Popularity: <span class=\"pop\">${movie.popularity}</span>`;\n    modalOrigTitle.innerHTML = `Title: <span class=\"titl\">${movie.original_title}</span>`;\n    // modalGenre.textContent = movie.genre;\n    \n    const movieGenres = movie.genre_ids && Array.isArray(genres)\n    ? movie.genre_ids.map(genreId => {\n        const genre = genres.find(genre => genre.id === genreId);\n        return genre ? genre.name : '';\n    }).join(', ')\n    : '';\n\n    modalGenre.innerHTML = `Genre: <span class=\"movgen\">${movieGenres}</span>`;\n    modalOverview.textContent = movie.overview;\n    modal.style.display = \"block\";\n}\n\n// function to close the modal\nfunction closeModal() {\n    modal.style.display = \"none\";\n}\n\n// event listener for the close button\ncloseBtn.addEventListener('click', closeModal);\n\n// event listener for clicks outside the modal\nwindow.addEventListener('click', function(event) {\n    if(event.target === modal) {\n        closeModal();\n    }\n});\n\nconst main = document.getElementById('main');\nconst form = document.getElementById('search-form');\nconst search = document.getElementById('search-input');\nconst galleryEl = document.getElementById('gallery');\nconst loader = document.querySelector('.loader-container');\n\n// PAGINATION\nconst prev = document.getElementById('prev');\nconst next = document.getElementById('next');\nconst current = document.getElementById('current');\n\nvar currentPage = 1;\nvar nextPage = 2;\nvar prevPage = 3;\nvar lastUrl = '';\nvar totalPages = 100;\n\nlet currentMovieTitle;\nlet queue = [];\nlocalStorage.setItem(\"movie-queue\", JSON.stringify(queue));\n\ngetMovies(API_URL);\n\n// DISPLAY MOVIE CARDS\nfunction getMovies(url) {\n  lastUrl = url;\n\n  // main.classList.toggle('is-hidden');\n  // loader.classList.toggle('is-hidden');\n\n  fetch(url)\n      .then(res => res.json())\n      .then(data => {\n          console.log(data); // Log data to inspect\n          if(data.results.length !== 0){\n              showMovies(data.results);\n              currentPage = data.page;\n              nextPage = currentPage + 1;\n              prevPage = currentPage - 1;\n              totalPages = data.total_pages;\n\n              current.innerText = currentPage;\n              if(currentPage <= 1){\n                  prev.classList.add('disabled');\n                  next.classList.remove('disabled');\n              } else if(currentPage >= totalPages){\n                  prev.classList.remove('disabled');\n                  next.classList.add('disabled');\n              } else {\n                  prev.classList.remove('disabled');\n                  next.classList.remove('disabled');\n              }\n\n          } else {\n              main.classList.toggle('is-hidden');\n              loader.classList.toggle('is-hidden');\n              main.innerHTML = `<h1 class=\"no-results\">No Results Found</h1>`;\n          }\n      })\n      .catch(error => {\n          console.error('Error fetching movies:', error);\n          main.classList.toggle('is-hidden');\n          loader.classList.toggle('is-hidden');\n          main.innerHTML = `<h1 class=\"no-results\">Error fetching movies</h1>`;\n      });\n}\n\nfunction showMovies(data) {\n  main.innerHTML = '';\n\n  data.forEach(movie => {\n      const { title, poster_path, release_date, genre_ids, vote_average } = movie;\n      const movieEl = document.createElement('div');\n      movieEl.classList.add('movie');\n\n      const movieGenres = Array.isArray(genres)\n          ? genre_ids?.map(genreId => {\n              const genre = genres.find(genre => genre.id === genreId);\n              return genre ? genre.name : '';\n          }).join(', ')\n          : '';\n      \n      const releaseYear = release_date ? (new Date(release_date)).getFullYear() : '';\n\n      movieEl.innerHTML = `\n          <img src=\"${poster_path ? IMG_URL + poster_path : 'http://via.placeholder.com/1080x1500'}\" alt=\"${title}\"/>\n          \n          <div class=\"movie-info\">\n              <h3>${title}</h3>\n          </div>\n          <div class=\"genredate\">${movieGenres} | ${releaseYear}</div>\n          <span id=\"vote_average\" class=\"${vote_average}\">${vote_average}</span>\n      `;\n      movieEl.addEventListener('click', function() { openModal(movie) });\n      main.appendChild(movieEl);\n  });\n}\n\nform.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const searchTerm = search.value;\n    \n    if(searchTerm) {\n        getMovies(searchURL+'&query='+searchTerm)\n    }else{\n        getMovies(API_URL);\n    }\n})\n\n// function for previous page\nprev.addEventListener('click', () => {\n    if(prevPage > 0) {\n        pageCall(prevPage);\n    }\n})\n\n// function for the next page\nnext.addEventListener('click', () => {\n    if(nextPage <= totalPages) {\n        pageCall(nextPage);\n    }\n})\n\nfunction pageCall(page) {\n    let urlSplit = lastUrl.split('?');\n    let queryParams = urlSplit[1].split('&');\n    let key = queryParams[queryParams.length - 1].split('=');\n    if(key[0] != 'page') {\n        let url = lastUrl + '&page=' + page;\n        getMovies(url);\n    }else{\n        key[1] = page.toString();\n        let a = key.join('=');\n        queryParams[queryParams.length - 1] = a;\n        let b = queryParams.join('&');\n        let url = urlSplit[0] +'?'+ b;\n        getMovies(url);\n    }\n}\n\n\n"],"names":["$66b821ea461d9f2a$var$genres","$66b821ea461d9f2a$var$API_KEY","$66b821ea461d9f2a$var$API_URL","$66b821ea461d9f2a$var$BASE_URL","$66b821ea461d9f2a$var$IMG_URL","$66b821ea461d9f2a$var$modal","document","getElementById","$66b821ea461d9f2a$var$modalPoster","$66b821ea461d9f2a$var$modalTitle","$66b821ea461d9f2a$var$modalVote","$66b821ea461d9f2a$var$modalPopularity","$66b821ea461d9f2a$var$modalOrigTitle","$66b821ea461d9f2a$var$modalGenre","$66b821ea461d9f2a$var$modalOverview","$66b821ea461d9f2a$var$closeBtn","getElementsByClassName","$66b821ea461d9f2a$var$closeModal","style","display","fetch","then","response","json","data","genres","$66b821ea461d9f2a$var$getMovies","catch","error","console","addEventListener","window","event","target","$66b821ea461d9f2a$var$main","$66b821ea461d9f2a$var$form","$66b821ea461d9f2a$var$search","$66b821ea461d9f2a$var$loader","querySelector","$66b821ea461d9f2a$var$prev","$66b821ea461d9f2a$var$next","$66b821ea461d9f2a$var$current","$66b821ea461d9f2a$var$currentPage","$66b821ea461d9f2a$var$nextPage","$66b821ea461d9f2a$var$prevPage","$66b821ea461d9f2a$var$lastUrl","$66b821ea461d9f2a$var$totalPages","url","res","log","results","length","innerHTML","forEach","movie","title","poster_path","release_date","genre_ids","vote_average","movieEl","createElement","classList","add","movieGenres","Array","isArray","map","genreId","genre2","find","genre","id","name","join","releaseYear","Date","getFullYear","concat","src","textContent","vote_count","popularity","original_title","genre1","overview","$66b821ea461d9f2a$var$openModal","appendChild","$66b821ea461d9f2a$var$showMovies","page","total_pages","innerText","remove","toggle","$66b821ea461d9f2a$var$pageCall","urlSplit","split","queryParams","key","toString","a","b","localStorage","setItem","JSON","stringify","e","preventDefault","searchTerm","value","$66b821ea461d9f2a$var$searchURL"],"version":3,"file":"index.ad384e77.js.map"}