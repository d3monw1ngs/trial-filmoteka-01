{"mappings":"AAAA,MAEMA,EAAUC,+GAKhB,IAAIC,EAAmCC,EAAOC,EACeD,EAAP,OAApDE,KAAKC,MAAMC,aAAaC,QAAQ,gBAAmC,GAAaH,KAAKC,MAAMC,aAAaC,QAAQ,gBAChHD,aAAaE,QAAQ,cAAeJ,KAAKK,UAAUP,IACUC,EAAP,OAAtDC,KAAKC,MAAMC,aAAaC,QAAQ,kBAAuC,GAAeH,KAAKC,MAAMC,aAAaC,QAAQ,kBACtHD,aAAaE,QAAQ,gBAAiBJ,KAAKK,UAAUN,IAGvD,MAAMO,EAAQC,SAASC,eAAe,WAChCC,EAAcF,SAASC,eAAe,gBACtCE,EAAaH,SAASC,eAAe,eACrCG,EAAYJ,SAASC,eAAe,cACpCI,EAAkBL,SAASC,eAAe,oBAC1CK,EAAiBN,SAASC,eAAe,wBACzCM,EAAaP,SAASC,eAAe,eACrCO,EAAgBR,SAASC,eAAe,kBACxCQ,EAAkBT,SAASC,eAAe,mBAC1CS,EAAeV,SAASC,eAAe,gBACvCU,EAAWX,SAASY,uBAAuB,SAAS,GAE1D,IAAIC,EAmCJ,SAASC,IACLf,EAAMgB,MAAMC,QAAU,M,CAlC1BC,MAAM5B,0FACH6B,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJR,EAASQ,EAAKC,OACdC,EAAUnC,EAAgB,IAE3BoC,OAAMC,IACLC,QAAQD,MAAM,yBAA0BA,EAAM,IA+BlDd,EAASgB,iBAAiB,QAASb,GAGnCc,OAAOD,iBAAiB,SAAS,SAASE,GACnCA,EAAMC,SAAW/B,GAChBe,G,IAIR,MAAMiB,EAAO/B,SAASC,eAAe,QAC/B+B,EAAOhC,SAASC,eAAe,eAC/BgC,EAASjC,SAASC,eAAe,gBAEjCiC,GADYlC,SAASC,eAAe,WAC3BD,SAASmC,cAAc,sBAGhCC,EAAOpC,SAASC,eAAe,QAC/BoC,EAAOrC,SAASC,eAAe,QAC/BqC,EAAUtC,SAASC,eAAe,WAExC,IAAIsC,EAAc,EACdC,EAAW,EACXC,EAAW,EACXC,EAAU,GACVC,EAAa,IAKjB,SAASpB,EAAUqB,GACjBF,EAAUE,EAEV3B,MAAM2B,GACD1B,MAAK2B,GAAOA,EAAIzB,SAChBF,MAAKG,IACFK,QAAQoB,IAAIzB,GACe,IAAxBA,EAAK0B,QAAQC,SAiC1B,SAAoB3B,GAClBU,EAAKkB,UAAY,GAEjB5B,EAAK6B,SAAQC,IACT,MAAMC,MAAEA,EAAKC,YAAEA,EAAWC,aAAEA,EAAYC,UAAEA,EAASC,aAAEA,GAAiBL,EAChEM,EAAUzD,SAAS0D,cAAc,OACvCD,EAAQE,UAAUC,IAAI,SAEtB,MAAMC,EAAcC,MAAMC,QAAQlD,GAC5B0C,aAAA,EAAAA,EAAWS,KAAIC,IACb,MAAMC,EAAQrD,EAAOsD,MAAKC,GAASA,EAAMC,KAAOJ,IAChD,OAAOC,EAAQA,EAAMI,KAAO,EAAE,IAC/BC,KAAK,MACN,GAEAC,EAAclB,EAAe,IAAKmB,KAAKnB,GAAeoB,cAAgB,GAE5EjB,EAAQR,UAAY,yBACJI,EAtJN,kCAsJ8BA,EAAc,gDAAgDD,2EAGxFA,8DAEeS,OAAiBW,qDACThB,MAAiBA,mBAEtDC,EAAQ9B,iBAAiB,SAAS,YA1HxC,SAAmBwB,GACfzB,QAAQoB,IAAI,cAAeK,GAC3BjD,EAAYyE,IAAM,mCAAmCxB,EAAME,cAC3DlD,EAAWyE,YAAczB,EAAMC,MAC/BhD,EAAU6C,UAAY,mCAAmCE,EAAMK,yBAAyBL,EAAM0B,aAC9FxE,EAAgB4C,UAAY,iCAAiCE,EAAM2B,oBACnExE,EAAe2C,UAAY,6BAA6BE,EAAM4B,wBAG9D,MAAMlB,EAAcV,EAAMI,WAAaO,MAAMC,QAAQlD,GACnDsC,EAAMI,UAAUS,KAAIC,IAClB,MAAMe,EAAQnE,EAAOsD,MAAKC,GAASA,EAAMC,KAAOJ,IAChD,OAAOe,EAAQA,EAAMV,KAAO,EAAE,IAC/BC,KAAK,MACN,GAEFhE,EAAW0C,UAAY,+BAA+BY,WACtDrD,EAAcoE,YAAczB,EAAM8B,SAClClF,EAAMgB,MAAMC,QAAU,O,CAwG2BkE,CAAU/B,E,IACzDpB,EAAKoD,YAAY1B,EAAQ,G,CA3DjB2B,CAAW/D,EAAK0B,SAChBR,EAAclB,EAAKgE,KACnB7C,EAAWD,EAAc,EACzBE,EAAWF,EAAc,EACzBI,EAAatB,EAAKiE,YAElBhD,EAAQiD,UAAYhD,EACjBA,GAAe,GACdH,EAAKuB,UAAUC,IAAI,YACnBvB,EAAKsB,UAAU6B,OAAO,aAChBjD,GAAeI,GACrBP,EAAKuB,UAAU6B,OAAO,YACtBnD,EAAKsB,UAAUC,IAAI,cAEnBxB,EAAKuB,UAAU6B,OAAO,YACtBnD,EAAKsB,UAAU6B,OAAO,eAI1BzD,EAAK4B,UAAU8B,OAAO,aACtBvD,EAAOyB,UAAU8B,OAAO,aACxB1D,EAAKkB,UAAY,+C,IAGxBzB,OAAMC,IACHC,QAAQD,MAAM,yBAA0BA,GACxCM,EAAK4B,UAAU8B,OAAO,aACtBvD,EAAOyB,UAAU8B,OAAO,aACxB1D,EAAKkB,UAAY,mDAAmD,G,CA6D9E,SAASyC,EAASL,GACd,IAAIM,EAAWjD,EAAQkD,MAAM,KACzBC,EAAcF,EAAS,GAAGC,MAAM,KAChCE,EAAMD,EAAYA,EAAY7C,OAAS,GAAG4C,MAAM,KACpD,GAAa,QAAVE,EAAI,GAAc,CAEjBvE,EADUmB,EAAU,SAAW2C,E,KAE9B,CACDS,EAAI,GAAKT,EAAKU,WACd,IAAIC,EAAIF,EAAIvB,KAAK,KACjBsB,EAAYA,EAAY7C,OAAS,GAAKgD,EACtC,IAAIC,EAAIJ,EAAYtB,KAAK,KAEzBhD,EADUoE,EAAS,GAAI,IAAKM,E,EAhHpC1E,EAAUnC,GA0EV4C,EAAKL,iBAAiB,UAAWuE,IAC7BA,EAAEC,iBAEF,MAAMC,EAAanE,EAAOoE,MAGtB9E,EADD6E,EACWE,4FAAoBF,EAEpBhH,EAAQ,IAK1BgD,EAAKT,iBAAiB,SAAS,KACxBc,EAAW,GACViD,EAASjD,EAAS,IAK1BJ,EAAKV,iBAAiB,SAAS,KACxBa,GAAYG,GACX+C,EAASlD,EAAS,IAqBzBT,EAAKJ,iBAAiB,SAASuE,IAC5B,IAAIK,EAAeL,EAAEpE,OAAO0E,cAC5BlH,EAAoBiH,EAAaE,iBAAiBC,kBAAkBnB,UACpE7D,QAAQoB,IAAIxD,EAAkB,IAGhCmB,EAAgBkB,iBAAiB,SAAS,KACxCnC,EAAQmH,SAASrH,GACbsH,MAAM,GAAGtH,8BACTE,EAAQqH,KAAKvH,GACjBK,aAAaE,QAAQ,gBAAiBJ,KAAKK,UAAUN,GAAS,IAGhEkB,EAAaiB,iBAAiB,SAAS,KACrCpC,EAAMoH,SAASrH,GACXsH,MAAM,GAAGtH,yCACTC,EAAMsH,KAAKvH,GACfK,aAAaE,QAAQ,cAAeJ,KAAKK,UAAUP,GAAO,IAG5DkB,EAAgBkB,iBAAiB,SAAS,KACxCnC,EAAQmH,SA/NWG,WAgOjBF,MAAM,GAAGtH,8BACTE,EAAQqH,KAjOSC,WAkOnBnH,aAAaE,QAAQ,gBAAiBJ,KAAKK,UAAUN,GAAS,IAGhEkB,EAAaiB,iBAAiB,SAAS,KACrCpC,EAAMoH,SAtOaG,WAuOjBF,MAAM,GAAGtH,yCACTC,EAAMsH,KAxOWC,WAyOnBnH,aAAaE,QAAQ,cAAeJ,KAAKK,UAAUP,GAAO,IAG5DS,SAAS+G,KAAKpF,iBAAiB,WAAWE,IACrB,WAAfA,EAAMmF,MACRlG,GAAY","sources":["src/js/script.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=b5e824a3d922f68ba211fcf6dbdcb6f5';\nconst API_URL = BASE_URL + '/discover/movie?sort_by-popularity.desc&' + API_KEY;\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst searchURL = BASE_URL + '/search/movie?'+API_KEY;\n\n// LOCAL STORAGE\nlet currentMovieTitle, currentMovieID, queue, watched;\n  JSON.parse(localStorage.getItem(\"movie-queue\")) === null ? queue = [] : queue = JSON.parse(localStorage.getItem(\"movie-queue\"));\n  localStorage.setItem(\"movie-queue\", JSON.stringify(queue));\n  JSON.parse(localStorage.getItem(\"movie-watched\")) === null ? watched = [] : watched = JSON.parse(localStorage.getItem(\"movie-watched\"));\n  localStorage.setItem(\"movie-watched\", JSON.stringify(watched));\n\n// MODAL PART\nconst modal = document.getElementById('myModal');\nconst modalPoster = document.getElementById('modal-poster');\nconst modalTitle = document.getElementById('modal-title');\nconst modalVote = document.getElementById('modal-vote');\nconst modalPopularity = document.getElementById('modal-popularity');\nconst modalOrigTitle = document.getElementById('modal-original-title');\nconst modalGenre = document.getElementById('modal-genre');\nconst modalOverview = document.getElementById('modal-overview');\nconst addToWatchedBtn = document.getElementById('addToWatchedBtn');\nconst addToQueuBtn = document.getElementById('addToQueuBtn');\nconst closeBtn = document.getElementsByClassName('close')[0];\n\nlet genres;\n\nfetch(BASE_URL + '/genre/movie/list?' + API_KEY)\n  .then(response => response.json())\n  .then(data => {\n    genres = data.genres;\n    getMovies(API_URL, genres);\n  })\n  .catch(error => {\n    console.error('Error fetching genres:', error);\n  });\n\n// function to open the modal with movie details\nfunction openModal(movie) {\n    console.log('Movie data:', movie);\n    modalPoster.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n    modalTitle.textContent = movie.title;\n    modalVote.innerHTML = `Vote / Votes: <span class=\"vot\">${movie.vote_average}</span> / ${movie.vote_count}`;\n    modalPopularity.innerHTML = `Popularity: <span class=\"pop\">${movie.popularity}</span>`;\n    modalOrigTitle.innerHTML = `Title: <span class=\"titl\">${movie.original_title}</span>`;\n    // modalGenre.textContent = movie.genre;\n    \n    const movieGenres = movie.genre_ids && Array.isArray(genres)\n    ? movie.genre_ids.map(genreId => {\n        const genre = genres.find(genre => genre.id === genreId);\n        return genre ? genre.name : '';\n    }).join(', ')\n    : '';\n\n    modalGenre.innerHTML = `Genre: <span class=\"movgen\">${movieGenres}</span>`;\n    modalOverview.textContent = movie.overview;\n    modal.style.display = \"block\";\n}\n\n// function to close the modal\nfunction closeModal() {\n    modal.style.display = \"none\";\n}\n\n// event listener for the close button\ncloseBtn.addEventListener('click', closeModal);\n\n// event listener for clicks outside the modal\nwindow.addEventListener('click', function(event) {\n    if(event.target === modal) {\n        closeModal();\n    }\n});\n\nconst main = document.getElementById('main');\nconst form = document.getElementById('search-form');\nconst search = document.getElementById('search-input');\nconst galleryEl = document.getElementById('gallery');\nconst loader = document.querySelector('.loader-container');\n\n// PAGINATION\nconst prev = document.getElementById('prev');\nconst next = document.getElementById('next');\nconst current = document.getElementById('current');\n\nvar currentPage = 1;\nvar nextPage = 2;\nvar prevPage = 3;\nvar lastUrl = '';\nvar totalPages = 100;\n\ngetMovies(API_URL);\n\n// DISPLAY MOVIE CARDS\nfunction getMovies(url) {\n  lastUrl = url;\n\n  fetch(url)\n      .then(res => res.json())\n      .then(data => {\n          console.log(data); // Log data to inspect\n          if(data.results.length !== 0){\n              showMovies(data.results);\n              currentPage = data.page;\n              nextPage = currentPage + 1;\n              prevPage = currentPage - 1;\n              totalPages = data.total_pages;\n\n              current.innerText = currentPage;\n              if(currentPage <= 1){\n                  prev.classList.add('disabled');\n                  next.classList.remove('disabled');\n              } else if(currentPage >= totalPages){\n                  prev.classList.remove('disabled');\n                  next.classList.add('disabled');\n              } else {\n                  prev.classList.remove('disabled');\n                  next.classList.remove('disabled');\n              }\n\n          } else {\n              main.classList.toggle('is-hidden');\n              loader.classList.toggle('is-hidden');\n              main.innerHTML = `<h1 class=\"no-results\">No Results Found</h1>`;\n          }\n      })\n      .catch(error => {\n          console.error('Error fetching movies:', error);\n          main.classList.toggle('is-hidden');\n          loader.classList.toggle('is-hidden');\n          main.innerHTML = `<h1 class=\"no-results\">Error fetching movies</h1>`;\n      });\n}\n\nfunction showMovies(data) {\n  main.innerHTML = '';\n\n  data.forEach(movie => {\n      const { title, poster_path, release_date, genre_ids, vote_average } = movie;\n      const movieEl = document.createElement('div');\n      movieEl.classList.add('movie');\n\n      const movieGenres = Array.isArray(genres)\n          ? genre_ids?.map(genreId => {\n              const genre = genres.find(genre => genre.id === genreId);\n              return genre ? genre.name : '';\n          }).join(', ')\n          : '';\n      \n      const releaseYear = release_date ? (new Date(release_date)).getFullYear() : '';\n\n      movieEl.innerHTML = `\n          <img src=\"${poster_path ? IMG_URL + poster_path : 'http://via.placeholder.com/1080x1500'}\" alt=\"${title}\"/>\n          \n          <div class=\"movie-info\">\n              <h3>${title}</h3>\n          </div>\n          <div class=\"genredate\">${movieGenres} | ${releaseYear}</div>\n          <span id=\"vote_average\" class=\"${vote_average}\">${vote_average}</span>\n      `;\n      movieEl.addEventListener('click', function() { openModal(movie) });\n      main.appendChild(movieEl);\n  });\n}\n\nform.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const searchTerm = search.value;\n    \n    if(searchTerm) {\n        getMovies(searchURL+'&query='+searchTerm)\n    }else{\n        getMovies(API_URL);\n    }\n})\n\n// function for previous page\nprev.addEventListener('click', () => {\n    if(prevPage > 0) {\n        pageCall(prevPage);\n    }\n})\n\n// function for the next page\nnext.addEventListener('click', () => {\n    if(nextPage <= totalPages) {\n        pageCall(nextPage);\n    }\n})\n\nfunction pageCall(page) {\n    let urlSplit = lastUrl.split('?');\n    let queryParams = urlSplit[1].split('&');\n    let key = queryParams[queryParams.length - 1].split('=');\n    if(key[0] != 'page') {\n        let url = lastUrl + '&page=' + page;\n        getMovies(url);\n    }else{\n        key[1] = page.toString();\n        let a = key.join('=');\n        queryParams[queryParams.length - 1] = a;\n        let b = queryParams.join('&');\n        let url = urlSplit[0] +'?'+ b;\n        getMovies(url);\n    }\n}\n //Clicking a movie\n main.addEventListener('click', e => {\n    let currentMovie = e.target.parentElement;\n    currentMovieTitle = currentMovie.lastElementChild.firstElementChild.innerText;\n    console.log(currentMovieTitle);\n  });\n  //Add to Watched (localStorage)\n  addToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieTitle)\n      ? alert(`${currentMovieTitle} has been watched already`)\n      : watched.push(currentMovieTitle);\n    localStorage.setItem('movie-watched', JSON.stringify(watched));\n  });\n  //Add to Queue (localStorage)\n  addToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieTitle)\n      ? alert(`${currentMovieTitle} has been added to the queue already`)\n      : queue.push(currentMovieTitle);\n    localStorage.setItem('movie-queue', JSON.stringify(queue));\n  });\n  //Add to Watched (localStorage)\n  addToWatchedBtn.addEventListener('click', () => {\n    watched.includes(currentMovieID) ?\n      alert(`${currentMovieTitle} has been watched already`) :\n      watched.push(currentMovieID);\n    localStorage.setItem('movie-watched', JSON.stringify(watched));\n  })\n  //Add to Queue (localStorage)\n  addToQueuBtn.addEventListener('click', () => {\n    queue.includes(currentMovieID) ?\n      alert(`${currentMovieTitle} has been added to the queue already`) :\n      queue.push(currentMovieID);\n    localStorage.setItem('movie-queue', JSON.stringify(queue));\n  })\n  //Pressing escape to close modal\n  document.body.addEventListener('keydown', event => {\n    if (event.code === 'Escape') {\n      closeModal();\n    }\n  });\n"],"names":["$1ee2b6306238ec66$var$API_URL","$1ee2b6306238ec66$var$BASE_URL","$1ee2b6306238ec66$var$currentMovieTitle","$1ee2b6306238ec66$var$queue","$1ee2b6306238ec66$var$watched","JSON","parse","localStorage","getItem","setItem","stringify","$1ee2b6306238ec66$var$modal","document","getElementById","$1ee2b6306238ec66$var$modalPoster","$1ee2b6306238ec66$var$modalTitle","$1ee2b6306238ec66$var$modalVote","$1ee2b6306238ec66$var$modalPopularity","$1ee2b6306238ec66$var$modalOrigTitle","$1ee2b6306238ec66$var$modalGenre","$1ee2b6306238ec66$var$modalOverview","$1ee2b6306238ec66$var$addToWatchedBtn","$1ee2b6306238ec66$var$addToQueuBtn","$1ee2b6306238ec66$var$closeBtn","getElementsByClassName","$1ee2b6306238ec66$var$genres","$1ee2b6306238ec66$var$closeModal","style","display","fetch","then","response","json","data","genres","$1ee2b6306238ec66$var$getMovies","catch","error","console","addEventListener","window","event","target","$1ee2b6306238ec66$var$main","$1ee2b6306238ec66$var$form","$1ee2b6306238ec66$var$search","$1ee2b6306238ec66$var$loader","querySelector","$1ee2b6306238ec66$var$prev","$1ee2b6306238ec66$var$next","$1ee2b6306238ec66$var$current","$1ee2b6306238ec66$var$currentPage","$1ee2b6306238ec66$var$nextPage","$1ee2b6306238ec66$var$prevPage","$1ee2b6306238ec66$var$lastUrl","$1ee2b6306238ec66$var$totalPages","url","res","log","results","length","innerHTML","forEach","movie","title","poster_path","release_date","genre_ids","vote_average","movieEl","createElement","classList","add","movieGenres","Array","isArray","map","genreId","genre2","find","genre","id","name","join","releaseYear","Date","getFullYear","src","textContent","vote_count","popularity","original_title","genre1","overview","$1ee2b6306238ec66$var$openModal","appendChild","$1ee2b6306238ec66$var$showMovies","page","total_pages","innerText","remove","toggle","$1ee2b6306238ec66$var$pageCall","urlSplit","split","queryParams","key","toString","a","b","e","preventDefault","searchTerm","value","$1ee2b6306238ec66$var$searchURL","currentMovie","parentElement","lastElementChild","firstElementChild","includes","alert","push","$1ee2b6306238ec66$var$currentMovieID","body","code"],"version":3,"file":"library.5d2e5057.js.map"}