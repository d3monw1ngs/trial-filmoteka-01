{"mappings":"AACAA,SAASC,iBAAiB,oBAAoB,WAC9C,MAAMC,EAAaF,SAASG,eAAe,eACrCC,EAAWJ,SAASG,eAAe,aACnCE,EAAkBL,SAASM,cAAc,YAC/C,IAAIC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,kBAChDC,EAAeJ,KAAKC,MAAMC,aAAaC,QAAQ,gBAanDE,eAAeC,EAAaC,GACxBV,EAAgBW,UAAY,GAC5B,IAAM,MAAMC,KAAWF,EACnB,IACI,IAAIG,EAAeD,GACf,MAAM,IAAIE,MAAM,qBAAqBF,KAEzC,MACMG,EAAeC,QADDC,EAAoBL,IAExCZ,EAAgBkB,YAAYH,E,CAEhC,MAAOI,GACkB,qBAAlBA,EAAMC,QACLC,QAAQC,KAAK,iBAAiBV,gBAE9BS,QAAQF,MAAM,2BAA4BA,E,EAO1DX,eAAeS,EAAoBL,GAC/B,MAEMW,EAAM,sCAAqBX,6CAE3BY,QAAiBC,MAAMF,GAC7B,IAAKC,EAASE,GACV,MAAuB,MAApBF,EAASG,OACF,IAAIb,MAAM,oBAEV,IAAIA,MAAM,kCAAoCU,EAASI,YAIrE,aAD2BJ,EAASK,M,CAKxC,SAASb,EAAmBc,GACxB,MAAMC,EAAUpC,SAASqC,cAAc,OAMvC,OALAD,EAAQE,UAAUC,IAAI,SACtBH,EAAQpB,UAAY,uBACJmB,EAAMK,YAAcC,QAAUN,EAAMK,YAAc,yDACxDL,EAAMO,mBAETN,C,CAEX,SAASlB,EAAeD,GACpB,OAAQ0B,MAAM1B,E,CA7DlBf,EAAWD,iBAAiB,SAAS,SAAS2C,GAC1CA,EAAEC,iBACF/B,EAAaP,E,IAGjBH,EAASH,iBAAiB,SAAS,SAAS2C,GACxCA,EAAEC,iBACF/B,EAAaF,E","sources":["src/js/library.js"],"sourcesContent":["\ndocument.addEventListener('DOMContentLoaded', function () {\nconst watchedBtn = document.getElementById('watched-btn');\nconst queueBtn = document.getElementById('queue-btn');\nconst moviesContainer = document.querySelector('.gallery');\nlet watchedMovies = JSON.parse(localStorage.getItem('movie-watched'));\nlet queuedMovies = JSON.parse(localStorage.getItem('movie-queue'));\n\nwatchedBtn.addEventListener('click', function(e) {\n    e.preventDefault();\n    getLibMovies(watchedMovies);\n});\n\nqueueBtn.addEventListener('click', function(e) {\n    e.preventDefault();\n    getLibMovies(queuedMovies);\n});\n\n// Load movies whose Ids matched with those stored in the localStorage\nasync function getLibMovies(array) {\n    moviesContainer.innerHTML = '';\n    for ( const movieId of array ) {\n        try {\n            if(!isValidMovieId(movieId)) {\n                throw new Error(`Invalid movie ID: ${movieId}`);\n            }\n            const movie = await getMovieDetailsById(movieId);\n            const movieElement = createMovieElement(movie);\n            moviesContainer.appendChild(movieElement);\n        }\n        catch (error) {\n            if(error.message === 'Movie not found.') {\n                console.warn(`Movie with ID ${movieId} not found.`);\n            } else {\n                console.error('Failed to display movie:', error);\n            }\n        }\n    }\n}\n\n// Requesting movies using IDs\nasync function getMovieDetailsById(movieId) {\n    const API_KEY = \"b5e824a3d922f68ba211fcf6dbdcb6f5\";\n    const BASE_URL = 'https://api.themoviedb.org/3';\n    const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n\n    const response = await fetch(url);\n    if (!response.ok) {\n        if(response.status === 404) {\n            throw new Error('Movie not found.');\n        } else {\n            throw new Error('Failed to fetch movie details: ' + response.statusText);\n        }\n    }\n    const movieDetails = await response.json();\n    return movieDetails;\n}\n\n// Create movie display\nfunction createMovieElement(movie) {\n    const element = document.createElement('div');\n    element.classList.add('movie');\n    element.innerHTML = `\n        <img src=\"${movie.poster_path ? IMG_URL + movie.poster_path : 'http://via.placeholder.com/1080x1500'}\";\n        <h3>${movie.title}</h3>\n    `;\n    return element;\n}\nfunction isValidMovieId(movieId) {\n    return !isNaN(movieId);\n}\n});"],"names":["document","addEventListener","watchedBtn","getElementById","queueBtn","moviesContainer","querySelector","watchedMovies","JSON","parse","localStorage","getItem","queuedMovies","async","getLibMovies","array","innerHTML","movieId","isValidMovieId","Error","movieElement","createMovieElement","getMovieDetailsById","appendChild","error","message","console","warn","url","response","fetch","ok","status","statusText","json","movie","element","createElement","classList","add","poster_path","IMG_URL","title","isNaN","e","preventDefault"],"version":3,"file":"library.9e4fa903.js.map"}